# Generated by Django 5.1.4 on 2025-01-07 22:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Datasets',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('thumbnail_url', models.TextField()),
                ('type', models.TextField()),
                ('format', models.TextField()),
                ('size', models.TextField()),
                ('likes_count', models.IntegerField(blank=True, null=True)),
                ('forks_count', models.IntegerField(blank=True, null=True)),
                ('views_count', models.IntegerField(blank=True, null=True)),
                ('is_featured', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_private', models.BooleanField(blank=True, null=True)),
                ('is_owner', models.BooleanField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'datasets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DatasetTags',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('tag', models.TextField()),
            ],
            options={
                'db_table': 'dataset_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModelCommits',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('files', models.TextField()),
                ('hash', models.TextField()),
            ],
            options={
                'db_table': 'model_commits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModelFileChanges',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('file_path', models.TextField()),
                ('change_type', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'model_file_changes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Models',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('thumbnail_url', models.TextField()),
                ('framework', models.TextField()),
                ('likes_count', models.IntegerField(blank=True, null=True)),
                ('forks_count', models.IntegerField(blank=True, null=True)),
                ('views_count', models.IntegerField(blank=True, null=True)),
                ('is_featured', models.BooleanField(blank=True, null=True)),
                ('is_private', models.BooleanField(blank=True, null=True)),
                ('type', models.TextField()),
                ('is_owner', models.BooleanField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'models',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModelTags',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('tag', models.TextField()),
            ],
            options={
                'db_table': 'model_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Profiles',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('username', models.TextField(unique=True)),
                ('display_name', models.TextField(blank=True, null=True)),
                ('avatar_url', models.TextField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('github_url', models.TextField(blank=True, null=True)),
                ('website_url', models.TextField(blank=True, null=True)),
                ('theme_preference', models.TextField(blank=True, null=True)),
                ('github_id', models.TextField(blank=True, null=True, unique=True)),
                ('github_access_token', models.TextField(blank=True, null=True)),
                ('github_username', models.TextField(blank=True, null=True)),
                ('organizations', models.JSONField(blank=True, null=True)),
                ('interests', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'profiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Repo',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('storage_id', models.TextField()),
                ('type', models.TextField()),
                ('owner_name', models.TextField()),
                ('owner_id', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('full_path', models.TextField()),
                ('is_folder', models.BooleanField()),
            ],
            options={
                'db_table': 'repo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spaces',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('thumbnail_url', models.TextField()),
                ('likes_count', models.IntegerField(blank=True, null=True)),
                ('forks_count', models.IntegerField(blank=True, null=True)),
                ('views_count', models.IntegerField(blank=True, null=True)),
                ('is_featured', models.BooleanField(blank=True, null=True)),
                ('is_private', models.BooleanField(blank=True, null=True)),
                ('slug', models.TextField(blank=True, null=True)),
                ('framework', models.TextField()),
                ('type', models.TextField()),
                ('is_owner', models.BooleanField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'spaces',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpaceTags',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('tag', models.TextField()),
            ],
            options={
                'db_table': 'space_tags',
                'managed': False,
            },
        ),
    ]
